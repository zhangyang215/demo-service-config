spring:
  application:
    name: service-config
  profiles.active: dev
management:
  endpoints:
    web:
      exposure:
        include: health, info, env, bus-refresh
---
server:
  port: 9000
spring:
  profiles: native
  cloud:
    config:
      server:
        native:
          search-locations: "classpath:config-repo"
        bootstrap: true
    stream:
      bindings:
        springCloudBusOutput:
          destination: springCloudBusInput
          contentType: application/json
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:9001/eureka/
---
server:
  port: 9000
spring:
  profiles: dev
  cloud:
    config:
      server:
        git:
          uri: https://github.com/mooodo/demo-service-config.git
          searchPaths: src/main/resources/config-repo
          force-pull: true
        bootstrap: true
    stream:
      bindings:
        springCloudBusOutput:
          destination: springCloudBusInput
          contentType: application/json
---
server:
  port: ${SERVICE_PORT:9000}
spring:
  profiles: docker
  cloud:
    config:
      server:
        git:
          uri: https://github.com/mooodo/demo-service-config.git
          searchPaths: src/main/resources/config-repo
          force-pull: true
        bootstrap: true
    stream:
      bindings:
        springCloudBusOutput:
          destination: springCloudBusInput
          contentType: application/json
---
spring:
  profiles: jdbc
  rabbitmq:
    host: 172.31.87.110
    port: 5672
    username: guest
    password: guest
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://mysql-0.mysql:3306/config?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: config
    password: config1234
    initialize: true
    continueOnError: true
  cloud:
    config:
      label: master
      server:
        jdbc: true
server:
  port: ${SERVICE_PORT:9000}
spring.cloud.config.server.jdbc.sql: SELECT key1, value1 from config_properties where APPLICATION=? and PROFILE=? and LABEL=?
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://eureka-0.eureka:9001/eureka/,http://eureka-1.eureka:9001/eureka/,http://eureka-2.eureka:9001/eureka/
  healthcheck:
    enabled: true